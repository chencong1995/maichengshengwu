<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.0.xsd 
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
    http://www.springframework.org/schema/mvc 
    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
    http://www.springframework.org/schema/task  
    http://www.springframework.org/schema/task/spring-task-3.2.xsd ">
           
	<context:annotation-config />
	<context:component-scan base-package="qt.service" />
	<bean
	class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	<property name="locations">
		<list>
			<value>classpath:jdbc.properties</value>
			<value>classpath:config.properties</value>
		</list>
	</property>
    </bean>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"	destroy-method="close">				
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}" />			
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${jdbc.initialSize}"/>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${jdbc.maxActive}"/>
		<!-- 连接池最大空闲 -->
    	<property name="maxIdle" value="${jdbc.maxIdle}"/>
    	<!-- 连接池最小空闲 -->
  		<property name="minIdle" value="${jdbc.minIdle}"/>
  		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${jdbc.maxWait}"/>
		<!-- 进行检测一个连接是有效的SQL语句，比如oracle是select 1 from dual 而 mysql是 select 1 -->
	    <property name="validationQuery" value="SELECT 1"/>
	    <!--   是否要进行检测 -->
	    <property name="testWhileIdle" value="true"/>
    	<property name="testOnBorrow" value="true"/>
    	<!-- 每隔多少时间检测一次，比如每半小时检测一次，总不能总是检测，这会对性能产生影响 -->
	    <property name="timeBetweenEvictionRunsMillis" value="3600000"/>
	    <!-- 每次检测时，需要检测多少个数据连接，一般设置为与最大连接数一样，这样就可以检测完所有的连接 -->
	    <property name="numTestsPerEvictionRun" value="50"/>
	    <!--  一个数据库连接连接多少时间之外，我们认为其应该不再适用了(可能下一次就会失效了)，应该移除并重新建立连接了 -->
	    <property name="minEvictableIdleTimeMillis" value="120000"/>
	    <!-- 是否在数据库连接请求量大的时候，如总数50，当前已请求了49个，所剩不多了，检测那些执行时间久的连接，将其从池中移除掉(移除之后怎么作，由实现决定，如直接断开，或者任其继续执行等) -->
	    <property name="removeAbandoned" value="true" />
	    <!--  一次数据库操作执行时间超过多少秒的连接被认为是需要移除的 -->
	    <property name="removeAbandonedTimeout" value="6000000" />
	</bean>
	
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 声明事务处理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
			
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="qt.mapper" />
    </bean>
    
    <!--使用@ResponseBody注解返回JSON数据 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	 <property name="messageConverters">
	   <list>
	  	 <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
	   </list>
     </property>
    </bean>

<!-- 多个拦截器，顺序执行 -->  
    <!-- 登录认证拦截器 --> 
	 <mvc:interceptors>
       <mvc:interceptor>  
        <mvc:mapping path="/ht/**"/>  
        <bean class="util.interceptors.LoginInterceptor"/>  
       </mvc:interceptor>  
	</mvc:interceptors>  
    
</beans>